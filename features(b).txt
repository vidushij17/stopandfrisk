columns_to_encode = [
    'STOP_WAS_INITIATED',
    'SUSPECT_SEX',
    'SUSPECT_RACE_DESCRIPTION',
    'STOP_LOCATION_BORO_NAME',
    'STOP_WAS_INITIATED',
    'SUSPECTED_CRIME_DESCRIPTION'
]

data = data[data['SUSPECTED_CRIME_DESCRIPTION'] != 'Other'] #removing the other category to focus on the most popular ones

data_encoded = pd.get_dummies(data, columns=columns_to_encode, prefix=columns_to_encode)
data_encoded = data_encoded.applymap(lambda x: int(x) if isinstance(x, bool) else x) #to get 1 hot encoding in 1 and 0

#total stop distance calculation

if 'STOP_LOCATION_X' in data.columns and 'STOP_LOCATION_Y' in data.columns:
    data_encoded['stop_total_distance'] = abs(data['STOP_LOCATION_Y'] - data['STOP_LOCATION_X'])
else:
    print("Columns 'STOP_LOCATION_X' and 'STOP_LOCATION_Y' not found in the dataset.")

#age group categorization -- can maybe remove the other age column but kept it in for now...

bins = [0, 17, 30, 45, 60, 100]
labels = ['Under 18', '18-30', '31-45', '46-60', '60+']
data_encoded['AGE_GROUP'] = pd.cut(data_encoded['SUSPECT_REPORTED_AGE'], bins=bins, labels=labels, right=False)

#patterns in sex and crime

data_encoded['SEX_CRIME_INTERACTION'] = data_encoded['SUSPECT_SEX_FEMALE'].astype(str) + "_" + data_encoded['SUSPECTED_CRIME_DESCRIPTION_ASSAULT'].astype(str)

data_encoded


df_cleaned = data_encoded

df_cleaned.to_csv("sqf-2023-cleaned-with-features(2).csv", index=False)

print("New CSV created successfully.")